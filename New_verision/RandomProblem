package Version_1;

import java.util.Random;

//Chooses a random type of problem and assigns random values
public class RandomProblem {
    Problem problem;

    // Problem Types
    public static final int KINETIC_FRICTION = 0;
    public static final int SLOWING_TO_STOP = 1;
    public static final int SINGLE_OBJECT = 2;
    public static final int STARTING_FRICTION = 3;
    public static final int WALL_FRICTION = 4;

    // List of items (each problem will choose a random one)
    public static final String[] items = { "block", "box", "book", "wagon", "lawnmower" };

    RandomProblem(int type) {
        Random rand = new Random();

        String object = items[rand.nextInt(items.length)];
        double mass = rand.nextInt(20) + 10;

        double ckf;
        double csf;

        switch (type) {
            case KINETIC_FRICTION:
                ckf = rand.nextInt(17) * 0.05 + 0.1;
                ckf = Math.round(ckf * 100.0) / 100.0;
                problem = new Problem(type, object, mass, ckf);
                break;

            case SLOWING_TO_STOP:
                double vi = rand.nextInt(20) + 10;
                double vf;
                if (rand.nextBoolean()) {
                    vf = 0;
                } else {
                    vf = rand.nextInt(9);
                }
                double distance = rand.nextInt(30) + vi;
                problem = new Problem(type, object, mass, vi, vf, distance);
                break;

            case SINGLE_OBJECT:
                ckf = rand.nextInt(17) * 0.05 + 0.1;
                ckf = Math.round(ckf * 100.0) / 100.0;
                double acceleration = rand.nextInt(30) * 0.1 + 1.0;
                acceleration = Math.round(acceleration * 100.0) / 100.0;
                problem = new Problem(type, object, mass, acceleration, ckf);
                break;

            case STARTING_FRICTION:
                csf = rand.nextInt(17) * 0.05 + 0.2;
                csf = Math.round(csf * 100.0) / 100.0;
                double appliedForce = rand.nextInt(100) + 30;
                problem = new Problem(type, mass, appliedForce, csf, object);
                break;

            case WALL_FRICTION:
                if (object.equals("lawnmower") || object.equals("wagon")) {
                    object = "textbook";
                }

                csf = rand.nextInt(12) * 0.05 + 0.45;
                csf = Math.round(csf * 100.0) / 100.0;
                problem = new Problem(type, mass, csf, object);
                break;
        }
        System.out.println(type);

        System.out.println(object + " of mass " + mass);
        System.out.println(problem.getProblem());
        System.out.println(problem.getAnswer());
        System.out.println();

    }

    public Problem getProblem() {
        return problem;
    }

    public static void main(String[] args) {
        Random rand = new Random();
        for (int i = 0; i < 10; i++) {
            new RandomProblem(rand.nextInt(5));
        }
    }
}
